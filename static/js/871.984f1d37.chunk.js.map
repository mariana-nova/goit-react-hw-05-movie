{"version":3,"file":"static/js/871.984f1d37.chunk.js","mappings":"+PAoCA,EA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAkBN,GAFhD,OAEUO,EAFV,OAGIH,EAAWG,GAHf,gDAKIC,QAAQC,MAAM,0BAAd,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACV,KAGF,iBAAKW,UAAU,gBAAf,WACE,qCACA,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,4BAASA,EAAOC,SADlB,KACqCD,EAAOE,UADnCF,EAAOG,GADC,QAQ1B,C,+LChCKC,EAAU,mCAEHC,EAAkB,mCAAG,iHAEPC,EAAAA,EAAAA,IAAA,gEAAmEF,IAF5D,cAExBG,EAFwB,OAGxBC,EAAOD,EAASC,KAChBC,EAAiBD,EAAKE,QAAQC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAJlB,kBAKvBJ,GALuB,sCAO9Bd,QAAQC,MAAM,iCAAd,MAP8B,8DAAH,qDAYlBkB,EAAY,mCAAG,WAAOC,GAAP,gGAEDT,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFW,IAF/E,cAElBR,EAFkB,yBAGjBA,EAASC,KAAKE,SAHG,sCAKxBf,QAAQC,MAAM,0BAAd,MALwB,8DAAH,sDAUZoB,EAAiB,mCAAG,WAAO7B,GAAP,gGAENmB,EAAAA,EAAAA,IAAA,6CAAgDnB,EAAhD,oBAAmEiB,EAAnE,wCAFM,cAEvBG,EAFuB,yBAGtBA,EAASC,MAHa,sCAK7Bb,QAAQC,MAAM,gCAAd,MAL6B,8DAAH,sDAUjBqB,EAAa,mCAAG,WAAO9B,GAAP,gGAEFmB,EAAAA,EAAAA,IAAA,6CAAgDnB,EAAhD,4BAA2EiB,IAFzE,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKU,MAHI,sCAKzBvB,QAAQC,MAAM,uBAAd,MALyB,8DAAH,sDAUbH,EAAiB,mCAAG,WAAON,GAAP,gGAENmB,EAAAA,EAAAA,IAAA,6CAAgDnB,EAAhD,4BAA2EiB,IAFrE,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKE,SAHQ,sCAK7Bf,QAAQC,MAAM,0BAAd,MAL6B,8DAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../Reviews/Reviews.css';\nimport { fetchMovieReviews } from '../api'; \n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchReviewsData() {\n      try {\n        const reviewsData = await fetchMovieReviews(movieId); \n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    }\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div className='reviews-color'>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <strong>{review.author}</strong>: {review.content}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n\n","import axios from 'axios';\n\nconst API_KEY = '1623f57533b97bebcbc907a2a1164d19';\n\nexport const fetchPopularMovies = async () => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n    const data = response.data;\n    const filteredMovies = data.results.filter(movie => movie.title);\n    return filteredMovies;\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (searchQuery) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCastData = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\n\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","reviewsData","console","error","fetchReviewsData","className","map","review","author","content","id","API_KEY","fetchPopularMovies","axios","response","data","filteredMovies","results","filter","movie","title","searchMovies","searchQuery","fetchMovieDetails","fetchCastData","cast"],"sourceRoot":""}