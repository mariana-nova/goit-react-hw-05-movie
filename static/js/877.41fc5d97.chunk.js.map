{"version":3,"file":"static/js/877.41fc5d97.chunk.js","mappings":"8PAyCA,EApCe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaL,GAFlB,OAEXM,EAFW,OAGjBH,EAAiBG,GAHA,gDAKjBC,QAAQC,MAAM,0BAAd,MALiB,yDAAH,qDASlB,OACE,iBAAKC,UAAU,aAAf,WACE,eAAIA,UAAU,QAAd,qBACA,4BACE,kBACEC,KAAK,OACLC,YAAY,sBACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAea,EAAEC,OAAOH,MAA5B,KAEb,mBAAQI,QAASZ,EAAjB,wBAEF,wBACGF,EAAce,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADO,QAQ/B,C,+LCrCKE,EAAU,mCAEHC,EAAkB,mCAAG,iHAEPC,EAAAA,EAAAA,IAAA,gEAAmEF,IAF5D,cAExBG,EAFwB,OAGxBC,EAAOD,EAASC,KAChBC,EAAiBD,EAAKpB,QAAQsB,QAAO,SAAAV,GAAK,OAAIA,EAAMG,KAAV,IAJlB,kBAKvBM,GALuB,sCAO9BpB,QAAQC,MAAM,iCAAd,MAP8B,8DAAH,qDAYlBH,EAAY,mCAAG,WAAOL,GAAP,gGAEDwB,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFtB,IAF/E,cAElByB,EAFkB,yBAGjBA,EAASC,KAAKpB,SAHG,sCAKxBC,QAAQC,MAAM,0BAAd,MALwB,8DAAH,sDAUZqB,EAAiB,mCAAG,WAAOC,GAAP,gGAENN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAAmER,EAAnE,wCAFM,cAEvBG,EAFuB,yBAGtBA,EAASC,MAHa,sCAK7BnB,QAAQC,MAAM,gCAAd,MAL6B,8DAAH,sDAUjBuB,EAAa,mCAAG,WAAOD,GAAP,gGAEFN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAA2ER,IAFzE,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKM,MAHI,sCAKzBzB,QAAQC,MAAM,uBAAd,MALyB,8DAAH,sDAUbyB,EAAiB,mCAAG,WAAOH,GAAP,gGAENN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAA2ER,IAFrE,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKpB,SAHQ,sCAK7BC,QAAQC,MAAM,0BAAd,MAL6B,8DAAH,qD","sources":["components/Pages/Movies.jsx","components/api.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Pages/Movies.css';\nimport { searchMovies } from '../api'; \n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const results = await searchMovies(searchQuery); \n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <div className='background'>\n      <h2 className='title'>Seeker</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"LOOK FOR YOUR MOVIE\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '1623f57533b97bebcbc907a2a1164d19';\n\nexport const fetchPopularMovies = async () => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n    const data = response.data;\n    const filteredMovies = data.results.filter(movie => movie.title);\n    return filteredMovies;\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (searchQuery) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCastData = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\n\n\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearch","searchMovies","results","console","error","className","type","placeholder","value","onChange","e","target","onClick","map","movie","to","id","title","API_KEY","fetchPopularMovies","axios","response","data","filteredMovies","filter","fetchMovieDetails","movieId","fetchCastData","cast","fetchMovieReviews"],"sourceRoot":""}